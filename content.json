{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"./"},"pages":[{"title":"about","date":"2020-10-19T00:01:45.000Z","updated":"2020-10-19T00:37:58.839Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-10-19T00:01:45.000Z","updated":"2020-10-19T00:38:26.527Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-10-19T00:01:45.000Z","updated":"2020-10-19T00:35:43.861Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"First blog","slug":"First-Blog","date":"2020-10-18T08:00:42.695Z","updated":"2020-10-19T00:48:10.042Z","comments":true,"path":"2020/10/18/First-Blog/","link":"","permalink":"http://example.com/2020/10/18/First-Blog/","excerpt":"","text":"/引用库函数/ #include&lt;stdio.h&gt; #include&lt;stdlib.h&gt; #include&lt;string.h&gt;/定义结构体数组/ typedef struct{char num[12]; /学号/ char name[20]; /姓名/char sex[2]; /性别/ int score[3]; /成绩/float avg; /平均分/ int sum; /总成绩/}Student;Student studentAll[80]; /结构体数组/ int student_number = 0; /总人数//菜单函数/ int menu_select(){ int check_number; do{ /菜单选择/system(“cls”); /运行前清屏clear screen,在stdlib.h中/printf(“\\n\\n ——————————————————–\\n”);printf(“ 、 《学生成绩管理系统》 、\\n”);printf(“ 、 —1. 添加学生信息 、 \\n”);printf(“ 、 —2. 显示学生信息 、 \\n”);printf(“ 、 —3. 按学号排序 、 \\n”);printf(“ 、 —4. 按总成绩排序 、 \\n”);printf(“ 、 —5. 查找单个学生 、 \\n”);printf(“ 、 —6. 删除指定学生 、 \\n”);printf(“ 、 —7. 修改学生信息 、 \\n”);printf(“ 、 —8. 查看各门课程的成绩情况 、 \\n”);printf(“ 、 —9. 待定功能 、 \\n”);printf(“ 、 —0. 保存退出 、 \\n”);printf(“ \\n”);printf(“请输入选择(0-9):”);scanf(“%d”,&amp;check_number); /读入选择/}while(check_number&lt;0||check_number&gt;9);return(check_number); /返回选择/}//以下的student都是形式参数，真正的数组是在全局变量里定义的studentAll数组/输入若干条记录/void Input(Student student[]) {int i=0,j;char flag,clear[10]; /clear[10]为清除多余的数据所用/char studentNum[12]; //暂存某学生学号 //判断是否已经存在相同学生的学号while(flag!=’n’&amp;&amp;flag!=’N’) //判断flag是不是n/N,以此判断是否继续输入学生信息{printf(“请输入学生学号: “); scanf(“%s”,studentNum);while(strcmp(student[i].num,studentNum)!=0&amp;&amp;i&lt;student_number) {i++; /查找判断/ } //查找到学生，无法增加学生信息，返回主函数 if(i&lt;student_number)printf(“已有相同学号的学生，请重新输入\\n”);//如果没有查找到学生，即可增加学生信息else { if(i==student_number){memset(student[i].num, 0, sizeof(student[i].num));//字符串清空strcpy(student[i].num,studentNum); printf(“学生姓名:”);scanf(“%s”,student[student_number].name); printf(“学生性别:”);scanf(“%s”,student[student_number].sex); printf(“c语言成绩:”);scanf(“%d”,&amp;student[student_number].score[0]); printf(“数据结构成绩:”);scanf(“%d”,&amp;student[student_number].score[1]); printf(“数据库成绩:”);scanf(“%d”,&amp;student[student_number].score[2]);student[student_number].sum=0;for(j=0;j&lt;3;j++) student[student_number].sum+=student[student_number].score[j];student[student_number].avg =(float)student[student_number].sum/3;//printf(“%.2f\\n”,student[student_number].avg); gets(clear); //清除多余的输入printf(“此学生信息录入完毕，是否继续?(Y/N)”);scanf(“%c”,&amp;flag); //输入判断student_number++; //总人数加1 i=0;}}}}/显示所有记录/void Display(Student student[]){int i; printf(“共有%d条记录\\n”,student_number);printf(“ _______________________________________________________________________\\n”);printf(“ 学号 姓名 性别 c语言 数据结构 数据库 平均分 总成绩 \\n”); for(i=0;i&lt;student_number;i++)printf(“ %-4s %-4s %-4s %-4d %-4d %-4d %4.2f %-6d *\\n”,student[i].num,student[i].name,student[i].sex,student[i].score[0],student[i].score[1],student[i].score[2],student[i].avg,student[i].sum); printf(“ ~\\n”); system(“pause”);}/*按学号排序*/ void Sort_by_num(Student student[]){ int j,k; Student swap; for(j=0;j&lt;student_number;j++)//冒泡法排序 {for(k=j+1;k&lt;student_number;k++){ if(strcmp(student[j].num,student[k].num)&gt;0){swap=student[j]; student[j]=student[k]; student[k]=swap;}}}}/按总成绩排序/ void Sort_by_sum(Student student[]) {int j,k; Student swap;for(j=0;j&lt;student_number;j++) //冒泡法排序 {for(k=j+1;k&lt;student_number;k++) {if(student[k].sum&gt;student[j].sum){swap=student[j];student[j]=student[k];student[k]=swap;}}}}/按姓名查找，删除一条记录/void Delete_a_record(Student student[]) { int i,j; char a[20];Student swap; printf(“请输入想要查找删除学生姓名：”); scanf(“%s”,a);for(i=0;strcmp(student[i].name,a)!=0&amp;&amp;i&lt;student_number;i++); //循环寻找并确保正确if(i&lt;student_number) { printf(“此学生的信息为：\\n”); printf(“学号 姓名 性别 c语言 数据结构 数据库 平均分 总成绩 \\n”); printf(“%-4s %-4s %-4s %-4d %-4d %-4d %4.2f %-6d *\\n”,student[i].num,student[i].name,student[i].sex,student[i].score[0],student[i].score[1],student[i].score[2],student[i].avg,student[i].sum); for(j=i;j&lt;student_number;j++){swap=student[j+1];student[j]=student[j+1];} student_number–; }else{system(“color 4e”); //出错后改变背景和字体颜色 printf(“输入错误!\\n”); }}/*按姓名查找并显示一个记录/ void Query_a_record(Student student[]){ int i; char a[20]; printf(“请输入想要查找学生姓名：”); scanf(“%s”,a); for(i=0;strcmp(student[i].name,a)!=0&amp;&amp;i&lt;student_number;i++); //循环寻找并确保正确 if(i&lt;student_number) {printf(“* 学号 姓名 性别 c语言 数据结构 数据库 平均分 总成绩 \\n”);printf(“ %-4s %-4s %-4s %-4d %-4d %-4d %4.2f %-6d \\n”,student[i].num,student[i].name,student[i].sex,student[i].score[0],student[i].score[1],student[i].score[2],student[i].avg,student[i].sum); } else { system(“color 4e”); //出错后改变背景和字体颜色printf(“输入错误!\\n”); }} /修改学生信息/void modifyStudentinformation(Student student[]){ int i,j; char a[12],clear[10]; printf(“请输入想要修改信息的学生学号:”); scanf(“%s”,a); for(i=0;strcmp(student[i].name,a)!=0&amp;&amp;i&lt;student_number;i++); if(i&lt;student_number) {printf(“修改之前的信息为：\\n”);printf(“*学号 姓名 性别 c语言 数据结构 数据库 平均分 总成绩 *\\n”); printf(“ %-4s %-4s %-4s %-4d %-4d %-4d %4.2f %-6d \\n”,student[i].num,student[i].name,student[i].sex,student[i].score[0],student[i].score[1],student[i].score[2],student[i].avg,student[i].sum);printf(“学生姓名:”); scanf(“%s”,student[i].name);printf(“请输入学生学号:”); scanf(“%s”,student[i].num);printf(“学生性别:”); scanf(“%s”,student[i].sex);printf(“c语言成绩:”); scanf(“%d”,&amp;student[i].score[0]);printf(“数据结构成绩:”); scanf(“%d”,&amp;student[i].score[1]);printf(“数据库成绩:”); scanf(“%d”,&amp;student[i].score[2]);student[i].sum=0; for(j=0;j&lt;3;j++)student[i].sum+=student[i].score[j]; student[i].avg = (float)student[i].sum/3;gets(clear); //清除多余的输入 printf(“修改之后的信息为：\\n”); printf(“ 学号 姓名 性别 c语言 数据结构 数据库 平均分 总成绩 \\n”);printf(“%-4s %-4s %-4s %-4d %-4d %-4d %4.2f %-6d \\n”,student[i].num,student[i].name,student[i].sex,student[i].score[0],student[i].score[1],student[i].score[2],student[i].avg,student[i].sum); } else {system(“color 4e”); //出错后改变背景和字体颜色 printf(“输入错误!\\n”);}}/查看各门课程的成绩情况/void showClass(Student student[]){ float addsum1,addsum2,addsum3; int i; addsum1=0; addsum2=0; addsum3=0; for(i=0;i&lt;student_number;i++) {addsum1+=student[i].score[0]; addsum2+=student[i].score[1]; addsum3+=student[i].score[2]; } printf(“C语言总成绩 平均分\\n”); printf(“%.2f %.2f\\n”,addsum1,addsum1/student_number); printf(“数据结构总成绩 平均分\\n”); printf(“%.2f %.2f\\n”,addsum2,addsum2/student_number); printf(“数据库总成绩 平均分\\n”); printf(“%.2f %.2f\\n”,addsum3,addsum3/student_number);}/从文件中读入数据/ void AddfromText(Student student[]){ int i=0; FILE *fp; /*定义文件/if((fp=fopen(“D:\\student.txt”,”rb”))==NULL) /打开二进制文件，如果不存在则创建/{fp=fopen(“D:\\student.txt”,”wb”);}fscanf(fp,”共有%d条记录\\n”,&amp;student_number); /读入总记录量/while(i&lt;student_number) /循环读入数据/{fscanf(fp,”%s %s %s %d %d %d %f %d\\n”,student[i].num,student[i].name,student[i].sex,&amp;student[i].score[0],&amp;student[i].score[1],&amp;student[i].score[2],&amp;student[i].avg,&amp;student[i].sum);i++;}fclose(fp);}/将所有记录写入文件/ void WritetoText(Student student[]){FILE *fp; int i=0;fp=fopen(“D:\\student.txt”,”wb”); //打开二进制文件fprintf(fp,”共有%d条记录\\n”,student_number);while(i&lt;student_number) //循环写入数据{fprintf(fp,”%s %s %s %d %d %d %f %d\\n”,student[i].num,student[i].name,student[i].sex,student[i].score[0],student[i].score[1],student[i].score[2],student[i].avg,student[i].sum); i++; }fclose(fp);} /主函数/int main() {AddfromText(studentAll);for(;;){ system(“color f0”); switch(menu_select())/选择判断/ {case 1: printf(“插入学生信息\\n”);/输入若干条记录/ Input(studentAll);break; case 2:printf(“显示记录\\n”); /显示所有记录/Display(studentAll); break;case 3: printf(“按学号排序\\n”); Sort_by_num(studentAll); /按学号排序/ printf(“按学号排序成功!\\n”);Display(studentAll); system(“pause”);break; case 4:printf(“按总成绩排序\\n” Sort_by_sum(studentAll);/按总成绩排序/ printf(“按总成绩排序成功!\\n”);Display(studentAll); system(“pause”);break; case 5:printf(“查找单个学生(输入名字查找)\\n”); Query_a_record(studentAll);/按姓名查找学生/ system(“pause”); break; case 6:printf(“删除指定学生(输入名字查找)\\n”);Delete_a_record(studentAll); /按姓名查找，删除一条记录/ system(“pause”);break; case 7:printf(“修改学生信息（输入学号查找）\\n”); modifyStudentinformation(studentAll); /查看学生成绩情况/ system(“pause”); break; case 8:printf(“查看各门课程的成绩情况\\n”); showClass(studentAll);/查看各门课程的成绩情况/ system(“pause”);break; case 9:printf(“待定功能\\n”); printf(“功能描述”);system(“pause”); break; case 0: WritetoText(studentAll);printf(“已保存，退出系统\\n”); system(“pause”); exit(0); /结束程序/}}} (大一上学期实训内容)该系统用于学生成绩管理，用户可以根据需求和菜单上的选项选择功能使用，1为添加学生信息，用户输入学号后即可输入学生信息；2为显示所有学生信息；3为将学生的信息按照序号从小到大排序；4为将学生的信息按照总成绩从大到小排序；5为查找单个学生信息，用户输入学生姓名即可查找，若没有该姓名则会改变字体和背景颜色警示并提示输入错误；6为删除指定学生，用户需输入学生的姓名，若没有该姓名则会改变字体和背景颜色警示并提示输入错误，否则显示该生信息后删除；7为修改学生信息，用户需输入学生的学号，若没有该姓名则会改变字体和背景颜色警示并提示输入错误，否则提示修改之前的信息后，可以修改信息，最后会显示修改后的学生信息；8为查看各门课程的成绩情况，会显示C语言、数据结构、数据库的总成绩和平均分；9为待定功能，待以后作者添加该系统的功能；0为保存学生信息并退出系统","categories":[],"tags":[]}],"categories":[],"tags":[]}